<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<logger name="org.springframework" level="DEDUG" />
	<logger name="org.springframework.web.servlet.mvc" level="DEDUG" />
	<logger name="org.springboot" level="DEDUG" />
	<logger name="com.netflix" level="DEDUG" />
	<logger name="springfox.documentation" level="DEDUG" />
	<logger name="io.swagger" level="ERROR" />
	
	<property resource="application.yml" />
	<springProperty scope="context" name="appName" source="spring.application.name" />
	<springProperty scope="context" name="env" source="spring.profiles.active" />

<!--	<conversionRule conversionWord="ip" converterClass="com.wenwo.cloud.common.common.context.LogIpConfig" />-->

	<!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->
	<property name="LOG_HOME" value="/data/logs/${appName}" />
	<!-- 日志输出格式 -->
	<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %M 输出执行日志请求的方法名  %c包路径  %F 输出执行记录请求的java源文件名  %L输出执行日志请求的行号  %msg：日志消息，%n是换行符-->
	<property name="ENCODER_PATTERN" value="[${appName}][%d{yyyy-MM-dd HH:mm:ss}][%-5level][%thread][%M][%c.%F,%L]==>%msg%n" />
	<property name="ENCODER_PATTERN_ERROR" value="[${appName}][%d{yyyy-MM-dd HH:mm:ss}][%-5level][%thread][%logger{80}.%M][%F.%L]-->%msg%n" />

	<!-- 控制台日志：输出全部日志到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>${ENCODER_PATTERN}</Pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
	</appender>

	<!-- 文件日志：输出全部日志到文件 -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/output.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
	</appender>

	<appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy> 
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN_ERROR}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
	</appender>                                                                                            

	<root>
		<level value="INFO" />
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
		<appender-ref ref="ERROR_FILE" />
	</root>
	
	<!--logstash-->
<!--
   <appender name="logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <destination>${logstash.server}</destination>
-->
        <!-- 设置appenders 的Buffer大小，默认8192，单位是B （否则待传输的日志超过buffer大小，则会丢失）-->
<!--
        <queueSize>1048576</queueSize>
        <encoder charset="UTF-8"  class="net.logstash.logback.encoder.LogstashEncoder" />
   		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
    </appender> 
 	
    <root level="INFO">
        <appender-ref ref="logstash" />
    </root> 
-->
    
</configuration>
